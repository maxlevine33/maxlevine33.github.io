frameRate(60);
var currentScene = 0; //0 = splash screen, 1 = game, 2 = custom
var playerScore = 0;
var aiScore = 0;
var paddleColor = 1;

//bitmojis
var drawBitmojiRami = function (x,y,big)
{
    stroke(0, 0, 0);
    noFill();
    noStroke();
    fill(246, 250, 165);
    ellipse(x+big/10*200,y+big/10*150,big/10*61,big/10*71); //head
    fill(30, 0, 255);
    
    arc(x+big/10*169,y+big/10*186,big/10*33,big/10*55,0,365);//Lcheek
    arc(x+big/10*233,y+big/10*185,big/10*33,big/10*55,0,365);//Rcheek
    
    fill(94, 42, 9);
    quad(x+big/10*165,y+big/10*139,x+big/10*171,y+big/10*151,x+big/10*199,y+big/10*112,x+big/10*168,y+big/10*124);//hair
    quad(x+big/10*234,y+big/10*137,x+big/10*225,y+big/10*150,x+big/10*198,y+big/10*113,x+big/10*229,y+big/10*120);
    rect(x+big/10*183,y+big/10*119,big/10*37,big/10*15);
    triangle(x+big/10*217,y+big/10*117,x+big/10*184,y+big/10*110,x+big/10*201,y+big/10*126);
    stroke(221, 255, 0);
    
    fill(0, 0, 0);//glasses
    rect(x+big/10*180,y+big/10*145,big/10*12,big/10*9);
    rect(x+big/10*205,y+big/10*145,big/10*12,big/10*9);
    fill(227, 252, 0);
    rect(x+big/10*205,y+big/10*147,big/10*-13,big/10*4);
    rect(x+big/10*231,y+big/10*150,big/10*-13,big/10*3,big/10*6);
    rect(x+big/10*179,y+big/10*150,big/10*-9,big/10*3,big/10*6);
    
    stroke(0, 0, 0);
    fill(246, 250, 165);
    bezier(x+big/10*208,y+big/10*152,x+big/10*186,y+big/10*160,x+big/10*251,y+big/10*162,x+big/10*196,y+big/10*162); //nose
    
    fill(255, 0, 0);
    arc(x+big/10*201,y+big/10*170,big/10*14,big/10*16,0,180);//mouth
    line(x+big/10*206,y+big/10*170,x+big/10*194,y+big/10*170);
    line(x+big/10*206,y+big/10*174,x+big/10*196,y+big/10*174);
    
    fill(199, 156, 64);//shirt
    noStroke();
    rect(x+big/10*175,y+big/10*184,big/10*53,big/10*86);
    ellipse(x+big/10*173,y+big/10*198,big/10*26,big/10*27);
    ellipse(x+big/10*229,y+big/10*198,big/10*26,big/10*27);
    
    fill(255, 255, 255);//Initials
    textSize(big/10*18);
    text("RJA",x+big/6*110,y+big/5*96,big/10*225,big/10*226);
};

//BITMOJI CODE
//clothes
var drawClothes = function(x,y,h){
    noStroke();
    fill(0, 0, 0);
    rect(x+(h/126*129), y+(h/126*228),h/126*139,h/126*52);//back panel of jacket
    fill(135, 96, 252);
    ellipse(x+(h/126*200),y+(h/126*260),h/126*150,h/126*80); // shirt
    fill (0, 0, 0);
    triangle(x+(h/126*223),y+(h/126*301),x+(h/126*129),y+(h/126*234),x+(h/126*110),y+(h/126*300)); //left jacket panel 
    triangle(x+(h/126*296),y+(h/126*301),x+(h/126*265),y+(h/126*227),x+(h/126*189),y+(h/126*301)); //right jacket panel
    fill(135, 96, 252);
    rect(x+(h/126*174),y+(h/126*261),h/126*50,h/126*40);//jacket opening
};

//initials on jacket
var drawInitials = function(x,y,h)
{
    fill(0,0,0);
    stroke(255, 255, 255);
    strokeWeight(3);
    arc(x+(h/126*143),y+(h/126*272),h/126*12,h/126*12,90,333);//top of S
    arc(x+(h/126*143),y+(h/126*285),h/126*12,h/126*12,278,535);//bottom of S
    line(x+(h/126*244),y+(h/126*292),x+(h/126*237),y+(h/126*273)); //left stroke for W
    line(x+(h/126*244),y+(h/126*292),x+(h/126*250),y+(h/126*278)); //left middle stroke for W
    line(x+(h/126*258),y+(h/126*292),x+(h/126*250),y+(h/126*278)); //right middle stroke for W
    line(x+(h/126*258),y+(h/126*292),x+(h/126*262),y+(h/126*273)); //right middle stroke for W
    noStroke();
};

//head, neck, back hair
var drawBaseHead = function(x,y,h)
{
    fill(107, 51, 10);
    rect(x+(h/126*151),y+(h/126*122),h/126*102,h/126*106); // back of the hair
    fill (247, 205, 205);
    ellipse(x+(h/126*200),y+(h/126*206),h/126*50,h/126*98); // neck
    fill(255, 227, 227);
    ellipse(x+(h/126*200),y+(h/126*150),h/126*85,h/126*126); //head
};

//eyebrows
var drawEyebrows = function(x,y,h)
{
    fill(54, 27, 8);
    ellipse (x+(h/126*176),y+(h/126*137),h/126*27,h/126*5); // left eyebrow
    ellipse (x+(h/126*222),y+(h/126*137),h/126*27,h/126*5); // right eyebrow
    fill(255, 255, 255);
};

//eyes
var drawEyes = function(x,y,h)
{
    strokeWeight(1);
    stroke(247, 205, 205);
    ellipse(x+(h/126*177),y+(h/126*152),h/126*27,h/126*15); // left eyeball
    ellipse(x+(h/126*222),y+(h/126*152),h/126*27,h/126*15); // right eyeball
    noStroke();
    fill(10, 102, 5);
    ellipse(x+(h/126*177),y+(h/126*152),h/126*12,h/126*12); // left iris
    ellipse(x+(h/126*222),y+(h/126*152),h/126*12,h/126*12); // right iris
    fill(0, 0, 0);
    ellipse(x+(h/126*177),y+(h/126*152),h/126*6,h/126*6); // left pupil
    ellipse(x+(h/126*222),y+(h/126*152),h/126*6,h/126*6); //right pupil
    fill(255, 255, 255);
    ellipse(x+(h/126*173),y+(h/126*150),h/126*3,h/126*3); // left highlight
    ellipse(x+(h/126*218),y+(h/126*150),h/126*3,h/126*3); //right highlight
};

// nose
var drawNose = function(x,y,h)
{
    fill(247, 205, 205);
    ellipse (x+(h/126*204),y+(h/126*150),h/126*3,h/126*23); //right nose shadow
    ellipse (x+(h/126*200),y+(h/126*167),h/126*20,h/126*8); //bottom nose shadow
};

//mouth
var drawMouth = function (x,y,h) {
    fill(255, 227, 227);
    strokeWeight(3);
    stroke(240, 170, 170);
    arc(x+(h/126*200),y+(h/126*178),h/126*35,h/126*21,0,130); // smile w/ no teeth :)
    fill(255,255,255);
    //arc(x+(h/126*200),y+(h/126*183),h/126*35,h/126*20,0,180);
    //line(x+(h/126*182),y+(h/126*181),x+(h/126*217),y+(h/126*181)); // smile with teeth :)
    noStroke();
};

//front hair pieces
var drawFrontHair = function(x,y,h) {
    noStroke();
    fill(107, 51, 10);
    ellipse(x+(h/126*158),y+(h/126*147),h/126*19,h/126*85); //left front hair
    ellipse(x+(h/126*241),y+(h/126*127),h/126*24,h/126*36); //right front hair
    ellipse(x+(h/126*164),y+(h/126*232),h/126*26,h/126*32); //left bottom front hair
    ellipse(x+(h/126*238),y+(h/126*227),h/126*30,h/126*41); //right bottom front hair
};

//ear & earring
var drawEar = function(x,y,h)  {
    fill(247, 205, 205);
    arc(x+(h/126*240),y+(h/126*153),h/126*25,h/126*28,270,450); //right ear
    fill(158, 9, 9);
    ellipse(x+(h/126*244),y+(h/126*162),h/126*2,h/126*2); //earring
};

//hat
var drawHat = function(x,y,h)
{
    fill(232, 18, 18);
    arc(x+(h/126*201),y+(h/126*128),h/126*105,h/126*100,180,360); //hat
    strokeWeight(2);
    stroke(199, 170, 6);
    rect(x+(h/126*220),y+(h/126*118),h/126*7,h/126*7);// clasp
    noStroke();
    fill(255, 227, 227);
    arc(x+(h/126*199),y+(h/126*116),h/126*45,h/126*33,180,360); // opening in back of hat because its backwards. 
    fill(107, 51, 10);
    arc(x+(h/126*199),y+(h/126*108),h/126*35,h/126*15,180,360); // hair showing through baseball hat
    fill(255, 255, 255);
    rect(x+(h/126*175),y+(h/126*118),h/126*15,h/126*8); // logo
};

var drawBody = function(x,y,h)
{
    drawClothes(x,y,h);
    drawInitials(x,y,h);
};

var drawFace = function(x,y,h)
{
    drawEyebrows(x,y,h);
    drawEyes(x,y,h);
    drawNose(x,y,h);
    drawMouth(x,y,h);
};

var drawHead = function(x,y,h)
{
    drawBaseHead(x,y,h);
    drawFace(x,y,h);
    drawFrontHair(x,y,h);
    drawEar(x,y,h);
    drawHat(x,y,h);
};

var drawSophiaBitmoji = function(x,y,h)
{
    drawBody(x,y,h);
    drawHead(x,y,h);
};

var drawBitmojiMax = function (x,y,z) // function to draw my bitmoji
{
    noStroke();
    fill(255, 212, 166);
    ellipse(x+(z/150*100), y+(z/150*100), z/150*80, z/150*100); 
    fill(255, 255, 255);
    fill(0, 0, 0);
    arc(x+(z/150*100), y+(z/150*96), z/150*86, z/150*95, 180, 360);
    fill(255, 255, 255);
    rect(x+(z/150*90), y+(z/150*78), z/150*5, z/150*13);
    ellipse(x+(z/150*105), y+(z/150*84), 10*z/100, 10*z/100);
    fill(0, 0, 0);
    stroke(0, 0, 0);
    line(x+(z/150*106), y+(z/150*82), x+(z/150*104), y+(z/150*86));
    line(x+(z/150*104), y+(z/150*82), x+(z/150*106), y+(z/150*86));
    noStroke();
    fill(145, 93, 40);
    ellipse(x+(z/150*90), y+(z/150*102), z/150*8, z/150*6);
    ellipse(x+(z/150*114), y+(z/150*102), z/150*8, z/150*6);
    stroke(0, 0, 0);
    fill(255, 212, 166);
    bezier(x+(z/150*100), y+(z/150*104), x+(z/150*120), y+(z/150*124), x+(z/150*92), y     +(z/150*117), x+(z/150*99), y+(z/150*115));
    fill(255, 255, 255);
    arc(x+(z/150*100), y+(z/150*126), z/150*27, z/150*14, 0, 180);
    line(x+(z/150*87), y+(z/150*126), x+(z/150*113), y+(z/150*126));
    fill(255, 255, 255);
    stroke(0, 0, 0);
    quad(x+(z/150*70), y+(z/150*148), x+(z/150*136), y+(z/150*148), x+(z/150*145), y      +(z /150*200), x+(z/150*59), y+(z/150*200));
    noStroke();
    fill(255, 255, 122);
    rect(x+(z/150*76), y+(z/150*153), z/150*10, z/150*2);
    fill(0, 0, 204);
    rect(x+(z/150*74), y+(z/150*155), z/150*15, z/150*2);
    fill(252, 205, 248);
    rect(x+(z/150*74), y+(z/150*157), z/150*15, z/150*2);
    stroke(0, 0, 0);
    line(x+(z/150*85), y+(z/150*190), x+(z/150*90), y+(z/150*160));
    line(x+(z/150*90), y+(z/150*160), x+(z/150*94), y+(z/150*178));
    line(x+(z/150*94), y+(z/150*178), x+(z/150*98), y+(z/150*160));
    line(x+(z/150*98), y+(z/150*160), x+(z/150*103), y+(z/150*190));
    line(x+(z/150*110), y+(z/150*160), x+(z/150*110), y+(z/150*189));
    line(x+(z/150*110), y+(z/150*190), x+(z/150*125), y+(z/150*190));
};
//END BITMOJI CODE

//khan button class
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
    this.text = config.text || 19;
};

Button.prototype.draw = function() {
    noStroke();
    fill(255, 0, 0);
    rect(this.x, this.y, this.width, this.height,5);
    fill(255, 255, 255);
    textSize(this.text);
    textAlign(LEFT,TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//start button
var startBtn = new Button
({
    x: 100,
    y: 500,
    label: "       START",
    onClick: function() {
        currentScene = 1;
    }
});
//customization button
var customBtn = new Button
({
    x: 350,
    y: 500,
    label: "  CUSTOMIZE",
    onClick: function() {
        currentScene = 2;
    }
});
//pause button
var pauseBtn = new Button
({
    x: 25,
    y: 500,
    height: 50,
    width: 80,
    label: "PAUSE",
    text: 16,
    onClick: function() {
        currentScene = 3;
    }
});


//paddle object class
var Paddle = function(x, y, d, color) {
    this.x = x; 
    this.y = y;
    this.d = d;
    this.r = this.d / 2;
    this.color = color; 
};

Paddle.prototype.draw = function() {
    strokeWeight(1);
    stroke(0, 0, 0);
    fill(this.color[0]);
    ellipse(this.x, this.y, this.d, this.d);
    fill(this.color[1]);
    ellipse(this.x, this.y, this.r, this.r);
};
//paddle movement
Paddle.prototype.playerMove = function() {
    this.x = mouseX;
    this.y = mouseY;
    if (mouseX < 178) {
        this.x = 178;
    }
    else if (mouseX > 423) {
        this.x = 423;
    }
    if (mouseY < 326) {
        this.y = 326;
    }
    else if (mouseY > 523) {
        this.y = 523;
    }
};

//paddle variables
var playerPaddle = new Paddle(300, 450, 50, [color(200, 0, 0), color(250, 0, 0)]);

var AIPaddle = new Paddle(300, 120, 50, [color(0, 0, 0), color(40, 40, 40)]);

//puck object class
var Puck = function(x, y, d, sx, sy) {

    this.x = x;
    this.y = y;
    this.d = d;
    this.r = this.d / 2;
    this.sx = sx;
    this.sy = sy;
};

Puck.prototype.draw = function() {

    strokeWeight(2);
    stroke(0);
    fill(0);
    ellipse(this.x, this.y, this.d, this.d);
    fill(50);
    ellipse(this.x, this.y, this.d / 2, this.d / 2);
};

//puck movement
Puck.prototype.move = function() {

    this.x += this.sx;
    this.y -= this.sy;

    if (this.x < 165) {
        this.sx *= -1;
    }
    if (this.x > 435) {
        this.sx *= -1;
    }
    if (this.x < 265 || this.x > 335) {
        if (this.y < 75) {
            this.sy *= -1;
        }
        if (this.y > 535) {
            this.sy *= -1;
        }
    }
};

//puck in goal = score
Puck.prototype.goal = function() {
    
    if (this.y < 47) {
        playerScore++;
        this.x = 300;
        this.y = 300;

    }
    if (this.y > 553) {
        aiScore++;
        this.x = 300;
        this.y = 300;
    }
};

//puck
var puck = new Puck(300, 300, 25, 4, 4);


//AI PADDLE movement
Paddle.prototype.AIMove = function() {

var  AIdifficulty = 20;

if (aiScore)
{AIdifficulty+=50;}

else if(playerScore)
{AIdifficulty = 20;}

    this.x = puck.x + AIdifficulty ;
    
    

    if (this.x < 175) {
        this.x = 175 ;
    }

    if (this.x > 425) {
        this.x = 425 ;
    }
};

//Paddle Collision
Paddle.prototype.collision = function() {
    
    if (this.x  > puck.x - 11 && this.x < puck.x + 11 && this.y - this.r < puck.y + puck.r && this.y + this.r > puck.y - puck.r){
        puck.sy *= -1;
    }
    
    if (puck.y + puck.r > this.y - this.r && puck.y - puck.r < this.y + this.r && ((puck.x + puck.r > this.x - this.r && puck.x + puck.r < this.x - (this.r/2)) || (puck.x - puck.r < this.x + this.r && puck.x - puck.r > this.x + (this.r/2)))) {
        puck.sx = puck.sx * -1;
    }
    
};

// buttons to change puck color in custom screen
var redBtn = new Button
({
    x : 224,
    y : 200,
    label: "         Red",
    onClick : function(){
    playerPaddle.color = [color(179, 4, 4), color(250, 0, 0)];
    paddleColor = 1;
        
    }

});

var blueBtn = new Button
({
    x : 224,
    y : 253,
    label: "         Blue",
    onClick : function(){
    playerPaddle.color= [color(5, 5, 171), color(0, 0, 255)];
    paddleColor = 2;
        
    }
});

var greenBtn = new Button
({
    x : 224,
    y : 305,
    label: "         Green",
    onClick : function(){
    playerPaddle.color = [color(2, 135, 2), color(7, 184, 7)];
    paddleColor = 3;
        
    }
});

//back home, from custom screen
var customHomeBtn = new Button ({
    x : 100,
    y : 418,
    label: "Home",
    onClick : function(){
        currentScene = 0;
    }
}); 

// letters
var drawA = function (x,y,h) //A
{
    fill(255, 0, 0);
    triangle(x+(h/90*5),y+(h/90*100),x+(h/90*115),y+(h/90*10),x+(h/90*40),y+(h/90*100)); // left slant
    triangle(x+(h/90*80),y+(h/90*10),x+(h/90*115),y+(h/90*10),x+(h/90*5),y+(h/90*100));// upper left slant
    rect(x+(h/90*90),y+(h/90*50), h/90*30, h/90*50); //right straight edge
    triangle(x+(h/90*120),y+(h/90*52),x+(h/90*120),y+(h/90*12),x+(h/90*90),y+(h/90*51)); // top of right side
    rect(x+(h/90*78),y+(h/90*67),h/90*35,h/90*20); //line through middle
    triangle(x+(h/90*95), y+(h/90*88), x+(h/90*78), y+(h/90*67), x+(h/90*60), y+(h/90*88)); //edge of line through middle 
};

var drawI = function (x,y,h) //I
{
    rect(x+(h/90*130), y+(h/90*10), h/90*30, h/90*90);
};

    var drawR = function (x,y,h) //R
{
    rect(x+(h/90*170), y+(h/90*10), h/90*30, h/90*90);
    strokeWeight(h/90*23);
    stroke(255, 0, 0);
    noFill();
    arc(x+(h/90*201),y+(h/90*42),h/90*50,h/90*40, 270, 455);
    noStroke();
    fill(255, 0, 0);
    triangle(x+ (h/90*250), y+(h/90*100), x+(h/90*220), y+(h/90*65), x+(h/90*220), y+(h/90*100));//outer triangle lower line
    triangle(x+(h/90*175), y+(h/90*45), x+(h/90*220), y+(h/90*66), x+(h/90*220), y+(h/90*100)); // upper triangle lower line
    fill(30, 0, 255);
    rect(x+(h/90*198),y+(h/90*9),h/90*5,h/90*93); // line break
    triangle(x+(h/90*220),y+(h/90*42),x+(h/90*200),y+(h/90*30),x+(h/90*200),y+(h/90*55));//triangle in the middle
};

var drawH = function (x,y,h) //H
{
    fill(255, 0, 0);
    rect(x+(h/90*270), y+(h/90*10), h/90*30, h/90*90); //left line
    rect(x+h/90*314, y+h/90*10, h/90*30, h/90*90); // right line
    rect(x+h/90*305, y+h/90*48, h/90*36, h/90*20); // middle line
};

var drawO = function (x,y,h) //O
{
 rect(x+h/90*355,y+h/90*10,h/90*60,h/90*90);//base
 fill(30, 0, 255);
 rect(x+h/90*373,y+h/90*33,h/90*25,h/90*41);//center
 strokeWeight(5);
 stroke(30, 0, 255);
 line(x+(h/90*421),y+(h/90*1),x+(h/90*353),y+(h/90*103));
 noStroke();
};

var drawC = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*426,y+h/90*10,h/90*60,h/90*90);//base
    fill(30, 0, 255);
    rect(x+h/90*455,y+h/90*33,h/90*44,h/90*41);//center
    triangle(x+(h/90*490),y+(h/90*34),x+(h/90*486),y+(h/90*5),x+(h/90*468),y+(h/90*34));//triangle on top
    triangle(x+(h/90*490),y+(h/90*74),x+(h/90*486),y+(h/90*104),x+(h/90*468),y+(h/90*74));//triangle on bottom
    
};

var drawK = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*496,y+h/90*10,h/90*60,h/90*90);//base
    triangle(x+(h/90*570),y+(h/90*9),x+(h/90*554),y+(h/90*28),x+(h/90*556),y+(h/90*9));//top angle
    triangle(x+(h/90*570),y+(h/90*100),x+(h/90*554),y+(h/90*81),x+(h/90*554),y+(h/90*100));//bottom angle
    fill(30, 0, 255);
    triangle(x+(h/90*525),y+(h/90*55),x+(h/90*540),y+(h/90*100),x+(h/90*525),y+(h/90*100));//triangle on bottom
    triangle(x+(h/90*525),y+(h/90*9),x+(h/90*540),y+(h/90*9),x+(h/90*525),y+(h/90*55));//triangle on top
    triangle(x+(h/90*525),y+(h/90*55),x+(h/90*557),y+(h/90*25),x+(h/90*557),y+(h/90*85));//triangle center
    rect(x+(h/90*521),y+(h/90*9),h/90*5,h/90*93); // line break
};

var drawE = function (x,y,h)
{
    fill(255, 0, 0);
    rect(x+h/90*579,y+h/90*10,h/90*60,h/90*90);//base
    fill(30, 0, 255);
    rect(x+h/90*609,y+h/90*30,h/90*30,h/90*15);//upper center
    rect(x+h/90*609,y+h/90*63,h/90*30,h/90*15);//lower center
    triangle(x+(h/90*640),y+(h/90*54),x+(h/90*640),y+(h/90*10),x+(h/90*619),y+(h/90*43));//triangle on top
    triangle(x+(h/90*640),y+(h/90*56),x+(h/90*640),y+(h/90*99),x+(h/90*620),y+(h/90*63));//triangle on bottom
    rect(x+(h/90*621),y+(h/90*38),h/90*20,h/90*30); //end of center rect
    rect(x+(h/90*606),y+(h/90*9),h/90*5,h/90*93); // line break
};

var drawY = function (x,y,h)
{
    fill(255, 0, 0);
    triangle(x+(h/90*680),y+(h/90*100),x+(h/90*715),y+(h/90*10),x+(h/90*645),y+(h/90*100)); // right slant
    triangle(x+(h/90*680),y+(h/90*10),x+(h/90*715),y+(h/90*10),x+(h/90*645),y+(h/90*100));// upper right slant
    triangle(x+(h/90*625),y+(h/90*10),x+(h/90*651),y+(h/90*10),x+(h/90*665),y+(h/90*32));// upper left slant
    triangle(x+(h/90*625),y+(h/90*10),x+(h/90*665),y+(h/90*30),x+(h/90*652),y+(h/90*65));// upper left slant
};

var drawAir = function (x,y,h) //AIR
{
    drawA(x,y,h-15);
    drawI(x-4,y,h-15);
    drawR(x-9,y,h-15);
};

var drawHockey = function (x,y,h) //HOCKEY
{
    drawH(x-9,y,h-15);
    drawO(x-14,y,h-15);
    drawC(x-19,y,h-15);
    drawK(x-23,y,h-15);
    drawE(x-26,y,h-15);
    drawY(x-10,y,h-15);
};

var drawAirHockey = function (x,y,h) // AIR HOCKEY
{
    drawAir(x,y,h);
    drawHockey(x,y,h);
};

//splashScreen
var splashScreen = function ()
{
    background(30, 0, 255);
    drawAirHockey(0,0,91);
    drawBitmojiRami(148,48,18);
    drawSophiaBitmoji(142,171,126);
    drawBitmojiMax(-7, 186, 213);
    fill(232, 248, 255);
    rect(0,470,600,131);
    fill(255, 0, 0);
    textSize(45);
    textSize(25);
    text ("by Max, Rami, and Sophia", 165,95);
    startBtn.draw();
    fill(255, 0, 0);
    customBtn.draw();

};

//gamescreen(rink, scoreboard)
var gameScreen = function ()
{
background(30, 0, 255);
pauseBtn.draw();

//audience
drawBitmojiRami(325,-26,9);
drawSophiaBitmoji(408,211,62);
drawBitmojiMax(442, 380, 100);

// red reactions
if (paddleColor === 1 && playerScore >= aiScore) {
    text("Red is the best!", 460,45);
    text("Rattlesnakes!!", 465, 226);
    text("Woo Rattlers!", 465, 365);
}
if (paddleColor === 1 && playerScore < aiScore) {
    text("Go Badgers!!", 465,45);
    text("Rattlesnakes 4 life!", 459, 226);
    text("Black will win!", 466, 372);
}

// blue reactions
if (paddleColor === 2 && playerScore >= aiScore) {
    text("Blue is the best!!", 459,45);
    text("Love the Bobcats!", 461, 226);
    text("Bobcats are #1!", 466, 365);
}
if (paddleColor === 2 && playerScore < aiScore) {
    text("Yay Black team!!", 466,45);
    text("Go Black Badgers!", 461, 226);
    text("Rooting for Blue!", 461, 372);
}
// green reactions 
if (paddleColor === 3 && playerScore >= aiScore) {
    text("Go Gators!", 469,45);
    text("I'm team Green!", 469, 226);
    text("Gators! Gators!", 469, 365);
}
if (paddleColor === 3 && playerScore < aiScore) {
    text("Let's go Green!", 469,45);
    text("Let's go Black!!", 469, 226);
    text("Go Badgers!", 469, 372);
}

//scoreboard
strokeWeight(3);
stroke(191, 0, 0);
fill(240, 240, 240);
rect(-9, 150, 110, 300, 15);
fill(255, 255, 255);
strokeWeight(1);
rect(8, 168, 80, 72);
line(8, 200, 88, 200);
rect(8, 362, 80, 72);
line(8, 400, 88, 400);
fill(0, 0, 0);
textSize(25);
text("AWAY", 13, 170);
text("HOME", 10, 405);
textSize(35);
text(aiScore, 40, 200);
text(playerScore, 40, 360);



//rink perimeter
stroke(191, 0, 0);
fill(240, 240, 240);
strokeWeight(5);
rect(150, 50, 300, 500, 30);

//nets
stroke(156, 204, 255);
fill(156, 204, 255);
strokeWeight(3);
arc(300, 48, 90, 60, 0, 180);
arc(300, 553, 90, 60, -180, 0);

//center rink details
stroke(156, 204, 255);
fill(156, 204, 255);
ellipse(300, 300, 20, 20); //center ice
noFill();
stroke(191, 0, 0);
ellipse(300, 300, 100, 100); //center circle
//dashed center line
var lineX = 0;
for (var i = 0; i < 4; i++) {
    rect(150 + lineX, 300, 15, 0);
    rect(350 + lineX, 300, 15, 0);
    lineX += 28;
}

stroke(156, 204, 255);
line(153, 150, 446, 150); //top blue line
line(153, 450, 446, 450); //bottom blue line

//Paddles
playerPaddle.draw();
playerPaddle.playerMove();
playerPaddle.collision();
AIPaddle.draw();
AIPaddle.AIMove();
AIPaddle.collision();

//Puck
puck.draw();
puck.move();
puck.goal();
fill(255, 0, 0);

/*text(mouseX + ", " + mouseY, 5, 550);
text(puck.x + ", " + puck.y, 451, 550);
*/

};

//customization screen
var customScreen = function ()
{
    background(30, 0, 255);
    fill(255, 255, 255);
    textSize(45);
    text("CUSTOMIZATION", 115,25);
    redBtn.draw();
    greenBtn.draw();
    blueBtn.draw();
    customHomeBtn.draw();
    playerPaddle.draw();
    image(getImage("avatars/robot_male_3"),456,472);
     for(var i = 0; i < 600; i+=83)
     {
          image(getImage("space/star"),i,80);
     }
    image(getImage("creatures/Hopper-Cool"),6,487);
    //team names
    //red rattlesnakes
    if (paddleColor === 1) 
    {
        textSize(35);
        fill(255, 255, 255);
        text("Red Rattlesnakes", 163, 525);
    }
    //blue bobcats
    if (paddleColor === 2) 
    {
        textSize(35);
        fill(255, 255, 255);
        text("Blue Bobcats", 205, 525);
    }
    //green gators
    if (paddleColor === 3) 
    {
        textSize(35);
        fill(255, 255, 255);
        text("Green Gators", 200, 525);
    }
};

//pause screen
var pauseScreen = function ()
{
    background(30, 0, 255);
    drawAirHockey(0,0,90);
    fill(232, 248, 255);
    rect(0,100,600,140);
    fill(255, 0, 0);
    textSize(45);
    text("TIME OUT", 185, 165);
   // text("Current Score: ", 100, 200);
    fill(52, 128, 44);
    startBtn.draw();
    //change START to CONTINUE
    fill(255, 0, 0);
    rect(127,508,100,30);
    fill(255, 255, 255);
    text("CONTINUE",125,513);
   drawBitmojiRami(212,229,15);
   drawSophiaBitmoji(236,345,108);
    
    //player team pause
    if (paddleColor === 1)
    {
        textSize(35);
        fill(255, 0, 0);
        text("RATTLESNAKES CALL", 120,120);
    }
    else if (paddleColor === 2)
    {
        textSize(35);
        fill(255, 0, 0);
        text("BOBCATS CALL", 163,120);
    }
    else if (paddleColor === 3)
    {
        textSize(35);
        fill(255, 0, 0);
        text("GATORS CALL", 175,120);
    }
    
    //scores
    if (aiScore > playerScore)
    {
        text("Black Badgers Lead", 140, 300);
        text(aiScore + " - " + playerScore, 260, 350);
    }
    else if (aiScore < playerScore)
    {
        text("Home Leads", 199, 260);
        text(playerScore + " - " + aiScore, 260, 306);
    }
        else if (aiScore === playerScore)
    {
        text("TIE", 267, 260);
        text(playerScore + " - " + aiScore, 260, 306);
    }
    
  
};
//mouseClicked/ button handle mouse click
 mouseClicked = function() {
    if (currentScene === 0)
    {
     startBtn.handleMouseClick();
     customBtn.handleMouseClick();
    }
    else if (currentScene === 1)
    {
        pauseBtn.handleMouseClick();
    }
    else if (currentScene === 2)
    {
     redBtn.handleMouseClick();
     greenBtn.handleMouseClick();
     blueBtn.handleMouseClick();
     customHomeBtn.handleMouseClick();
    }
    else if (currentScene === 3) 
    {
     startBtn.handleMouseClick();
    }
};

draw = function() {
        if (currentScene === 0)
        {splashScreen();}
        else if (currentScene === 1)
        {gameScreen();}
        else if (currentScene === 2)
        {customScreen();}
        else if (currentScene === 3)
        {pauseScreen();}

};
